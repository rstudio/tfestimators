# Generated by roxygen2: do not edit by hand

S3method(as.data.frame,tf_estimator_history)
S3method(coef,tf_estimator)
S3method(evaluate,tf_estimator)
S3method(export_savedmodel,tf_estimator)
S3method(input_fn,data.frame)
S3method(input_fn,default)
S3method(input_fn,formula)
S3method(input_fn,list)
S3method(input_fn,matrix)
S3method(model_dir,tf_estimator)
S3method(pad,data.frame)
S3method(pad,default)
S3method(predict,tf_estimator)
S3method(print,tensorflow.python.estimator.run_config.RunConfig)
S3method(print,tf_estimator)
S3method(print,tf_estimator_history)
S3method(train,tf_estimator)
export("%>%")
export(classifier_parse_example_spec)
export(column_bucketized)
export(column_categorical_weighted)
export(column_categorical_with_hash_bucket)
export(column_categorical_with_identity)
export(column_categorical_with_vocabulary_file)
export(column_categorical_with_vocabulary_list)
export(column_crossed)
export(column_embedding)
export(column_indicator)
export(column_numeric)
export(dnn_classifier)
export(dnn_linear_combined_classifier)
export(dnn_linear_combined_regressor)
export(dnn_regressor)
export(estimator)
export(estimator_spec)
export(evaluate)
export(feature_columns)
export(flag_boolean)
export(flag_integer)
export(flag_numeric)
export(flag_string)
export(flags)
export(get_latest_checkpoint)
export(graph_keys)
export(hook_checkpoint_saver)
export(hook_global_step_waiter)
export(hook_logging_tensor)
export(hook_nan_tensor)
export(hook_step_counter)
export(hook_stop_at_step)
export(hook_summary_saver)
export(input_fn)
export(input_layer)
export(install_tensorflow)
export(linear_classifier)
export(linear_regressor)
export(metric_keys)
export(mode_keys)
export(model_dir)
export(numpy_input_fn)
export(prediction_keys)
export(regressor_parse_example_spec)
export(run_config)
export(run_dir)
export(scoped_columns)
export(session_run_args)
export(session_run_hook)
export(set_columns)
export(task_type)
export(tensorboard)
export(tf)
export(tf_config)
export(train)
export(train_and_evaluate)
export(use_condaenv)
export(use_python)
export(use_virtualenv)
export(with_columns)
import(reticulate)
import(rlang)
import(tensorflow)
import(tidyselect)
importFrom(magrittr,"%>%")
importFrom(stats,coef)
importFrom(tfruns,flag_boolean)
importFrom(tfruns,flag_integer)
importFrom(tfruns,flag_numeric)
importFrom(tfruns,flag_string)
importFrom(tfruns,flags)
importFrom(tfruns,run_dir)
